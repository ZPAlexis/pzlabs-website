{
  "header": {
    "about": "ABOUT",
    "projects": "PROJECTS",
    "home": "HOME"
  },

  "footer":{
    "credits": "Developed by"
  },

  "summary": {
    "title": "COINS<br>COLLECTED",
    "text-coin-1": "<span>#1. </span>Hidden in box",
    "text-coin-2": "<span>#2. </span>Fill the bar",
    "best-coin-2": "Best:",
    "text-coin-3": "<span>#3. </span>Rock Paper Scissors",
    "text-wins": "Wins",
    "text-ties": "Ties",
    "text-losses": "Losses",
    "reset-text-btn": "RESET PROGRESS",
    "reset-text": "Collect all coins"
  },
  
  "index": {
    "intro-cover": "Gamified<br>Experiences",
    "coin-collected-text": "Coin Collected!",
    "intro-description": "Game-like solutions to inspire and motivate user engagement.",
    "intro-cover-options": [
      "Creating",
      "Engineering",
      "Designing",
      "Scoping",
      "Researching",
      "Mapping",
      "Coding",
      "Implementing",
      "Testing",
      "Iterating"
    ],
    "fill-bar-text-guide": "Fill this bar",
    "fill-bar-best-text": "Best Time!",
    "focus-auto-text-1": "Gamification",
    "focus-text-1": "is the application of game elements to increase user engagement.",
    "focus-auto-text-2": "Game elements",
    "focus-text-2": "can range from well-designed user interfaces to complex loyalty reward programs.",
    "focus-auto-text-3": "Our focus",
    "focus-text-3": "is to apply the perfect elements to the right situation.",
    "about-text-bubble": "Hi!",
    "about-text": "I’m <b>Alexis Coelho</b>, a <b>product manager</b> and enthusiast of clever game mechanics that influences our decision-making.",
    "about-learn-more-btn": "LEARN MORE ABOUT ME",
    "about-projects-title": "Projects.",
    "about-projects-description": "These are some of the experiments we’ve experimented with so far, more to come!",
    "learn-more-btn": "LEARN MORE",
    "rps-you": "YOU",
    "rps-ai": "A.I.",
    "rps-make-a-move": "Make a move to play the game.",
    "rps-win-3-times": "Win 3 times",
    "rps-win": "You win!",
    "rps-lose": "You lose.",
    "rps-tie": "Tie.",
    "cta-text": "Have a gamification question or idea?<br>Send me a message!"
  },

  "projects": {
    "trofy-project-description": "A “To-Do like” mobile app that gamifies personal objectives to reinforce the creation of good habits.",
    "bs-project-description": "A demo Unity game with a “Pick 1 of 3” rogue-like style mechanic inspired by the game Vampire Survivors.",
    "fa-project-description": "Our first Unity demo game to learn the basics of game development inspired by the game Flappy Birds."
  },

  "about": {
    "bio-availability": "Available for Freelance",
    "bio-role": "Product Developer",
    "bio-location": "São Paulo, Brazil",
    "hi": "Hi!",
    "intro-1": "I'm Alexis Coelho. A Product Developer, Industrial Engineer, MBA, and most importantly — a certified nerd.",
    "intro-2": "I create digital products that motivate customer engagement. My focus is on the exploration of creative game-like solutions that generate memorable experiences.",
    "intro-3": "These are some of the skills that I’ve been actively working on the past few years:",
    "intro-html": "Frontend development of websites and applications.",
    "intro-javascript": "Full stack development with Node.js.",
    "intro-csharp": "Logic systems for Unity applications and games.",
    "intro-unity": "Development of games and applications on iOS and Android mobile devices.",
    "intro-prototyping-title": "Prototyping",
    "intro-prototyping": "Design Systems with Figma and Canva blueprints.",
    "intro-sales-title": "Sales Operations",
    "intro-sales": "Funnel improvements and strategy alignment with CRM tools.",
    "interests-title": "Interests",
    "interests-1": "As a self-proclaimed certified nerd, the intersection between game mechanics and real life is something that fascinates me ever since I was a kid. Collecting all stickers on a sticker-book or getting a star on an exam I did well in early school are one of the earliest examples I experienced of game-like reward systems in real life.",
    "interests-2": "Understanding how and why certain technologies work is what drove most of my educational decisions and led me to where I am today. One of the biggest questions that I remember having when I was a kid was how a home refrigerator actually worked — it seemed like magic and I needed to understand it. The same happened with gamification systems as I tried to understand the psycology and decision making involved in motivating engagement through clever reward programs.",
    "interests-3": "I’ve been tinkering with computers and software programs since I was a kid. At the age of 11 my parents gave me my first home computer, and a few years later I was already assembling and dissassembling machines and setting up servers for online games.",
    "interests-4": "As you can probably figure out by now, gaming has been a constant interest I’ve kept throughout my life. It started as a way to disconnect from reality, but it evolved into a fascination of how interactive experiences can be purposefully crafted to create unforgettable user experiences. Now that’s my goal — explore and apply creative game-like systems to the right real-life situations.",
    "interests-5": "These are some of my hobbies and areas of interest:",
    "interests-technology-title": "Technology",
    "interests-technology": "Digital experiences, productivity tools, and smart devices.",
    "interests-gaming-title": "Gaming",
    "interests-gaming": "Story-focused experiences, indie games, and board games.",
    "interests-fantasy-title": "Fantasy",
    "interests-fantasy": "Fictonal worlds, Dungeons & Dragons, and classic books.",
    "interests-3dp-title": "3D-Printing",
    "interests-3dp": "Model design, 360 Fusion, and functional models.",
    "interests-fitness-title": "Fitness",
    "interests-fitness": "Well-being, stretching, calisthenics, and meditation.",
    "background-title": "Background",
    "background-1": "I've worked with a variety of small and medium sized businesses and interfaced with many different types of revenue-generating teams.",
    "background-2": "Most of my career focus was influenced by my Process Engineering degree, where I leveraged my ability to understand complex processes and re-align them to new business strategies.",
    "background-3": "My first job was at an Oil & Gas supplier of compressed gas skids, where my focus was to project manage the entire process from procurement of equipment to the delivery of the assembled units.",
    "background-4": "In an effort to pivot into a more technology-driven career I decided to go back to school and get an MBA. This led me to better understand the motivations behind different business strategies and opened opportunities to leverage my passion for technology in the startup space. This is where I spent most of my professional career working with Customer Loyalty Apps, Software as a Service solutions (SaaS), and implementing internal Customer Resource Management (CRM) systems to align internal processes with the overall company strategy.",
    "background-5": "I only truly understood the transformative potential of gamification systems when I worked with loyalty programs that had a real impact on financial results, and when I saw how internal competitions managed through <a class='link' href='https://www.salesforce.com/crm/what-is-crm/' target='_blank'>CRM software</a> boosted the performance of sales teams.",
    "background-6": "The possibilities for gamification of real life and work situations are endless. Technology is only becoming more and more accessble. This the perfect time to start leveraging gamified digital solutions to motivate real-life consequences.",
    "background-quote-title": "Mary Poppins said it back in 1964:",
    "background-quote": "“In every job that must be done, there’s an element of fun. You find the fun, and *snaps fingers* the job is a game!”",
    "ai-title": "My usage of AI tools",
    "ai-1": "Being a millenial, I grew up in the early stages of the internet. The only way to find information at the time was through mIRC channels and hidden forums. Since then, the way we access information online evolved quickly from Google searches, Stack Overflow conversations, Youtube tutorial videos, Reddit and other social communities, and now Artificial Intelligence.",
    "ai-2": "What was once a large amount of data publicly available to be consumed by anyone is now diluted by predictive systems that are designed to detect, learn, and re-produce based existing data. While this makes it easier and faster to find information, it also brings worring questions on the way these systems are trained and the future implications they could have.",
    "ai-3": "This is an area that we are all learning from right now. We are truly living in an inflection moment with how powerful and acessible AI tools are becoming. It is undeniable that it is a tool that can’t be ignored.",
    "ai-4": "I’ve learned from personal experience that offloading critical tasks leads to a slippery slope of knowledge retention issues and work quality maintenance. I use AI tools the same way I used Youtube videos, Google searches, and forum deep-dives in the past. It’s a way to review and improve instead of an avenue for creation and decision-making. None of my applications are defined or built by AI tools and prompts, they are only reviewed and improved by carefully planned interfacing with these tools.",
    "closing": "I wanted to thank you for taking the time to read this far, and I’m very interested to know your opinion on these topics. Feel free to reach out with your thougts over by email or WhatsApp!",
    "cta": "Want to connect?<br>Send me a message!",
    "cta-projects": "Check out some of our projects:"
  },

  "portfolio": {
    "fa": {
      "images": {
        "concepts": "images/projects/flappy_astronaut/PZLabs_Portfolio_FlappyAstronaut_3_CoreConcepts.png",
        "logic": "images/projects/flappy_astronaut/PZLabs_Portfolio_FlappyAstronaut_4_GameLogic.png",
        "design": "images/projects/flappy_astronaut/PZLabs_Portfolio_FlappyAstronaut_5_DesignSystem.png"
      },
      "category": "<span class='text-highlight'>Category:<br></span>Demo Unity Game",
      "stack": "<span class='text-highlight'>Tech Stack:<br></span>C#, Unity",
      "inspiration": "<span class='text-highlight'>Inspiration:<br></span>Flappy Bird",
      "index": "Index:",
      "objective": "Objective",
      "objective-1": "Flappy Astronaut is the first game I ever created. My initial goal when starting this project was simply to learn the basics of game development, but the main objective was to explore the depths of complexities involved in creating a game experience.",
      "objective-2": "It’s often said that game development is hard. But I only truly understood that after trying to create a simple playable prototype with this project. In order to create an experience that is truly memorable there really is a huge amount of effort required to develop the right game mechanics, design a matching user interface, create complementing art assets, collect quality feedback from user testing, and correctly market the product for release.",
      "objective-3": "The game was inspired by <a class='link' href='https://flappybird.io/' target='_blank'>Flappy Bird</a>, a simple game where you must keep a bird in the air while not touching any of the obstacles. The scope was limited on purpose so I could focus on the process and not the end result.",
      "objective-4": "Although Flappy Astronaut’s game design was heavily based on it’s influence, to achieve the goal set out by the project I decided to give the project it’s own twist. The general setting of the game received it’s own outer space environment, art assets, music, and new mechanics that aligned with the new theme.",
      "concepts": "Core Concepts",
      "concepts-1": "In Flappy Astronaut, the player must guide an astronaut through a field of asteroids while managing their limited supply of oxygen. The end goals is to simply stay alive for as long as possible.",
      "concepts-2": "While flying upwards, the astronaut has to dodge waves of incoming asteroids. These rocks are loosely scattered to provide more opportunities for the player to make quick risk-versus-reward decisions.",
      "concepts-3": "The astronaut is controlled by the user with the keyboard’s space bar. Every press leads to a jet of upward speed that consumes one oxygen tank. The player starts with 15 oxygen tanks and can quickly run out if not managed correctly. Oxygen tanks are scattered around the asteroid field and have to be strategically collected throughout the journey.",
      "concepts-4": "The run ends and the clock stops when the astronaut dies by hitting an asteroid, going below the edges of the screen, or running out of oxygen.",
      "tech": "Tech Stack",
      "tech-1": "This was my first time using a game engine platform. Unity provided the best and most scalable learning platform for this project given it’s initial objectives.",
      "tech-2": "Unreal Engine and Godot were other two great options I could have used as alternatives, with each using a different architecture and programming language. However, Unity was the only that provided but the decision came down to the C# programming language used specifically in Unity.",
      "tech-3": "The primary programming language used in Unity. This was the perfect opportunity to further develop skills in scripting game logic. C# was a great way to build proper foundations learning the principles of modularity, abstraction, and clean code.",
      "tech-4": "Used to create the pixel art presented in the project’s visual design system. The software is the best alternative to Photoshop when it comes to pixel art, and provides great support for animation with layers & frames as separated concepts.",
      "logic": "Game Logic",
      "logic-1": "The logic diagram is a summarized representation of the controlling scripts attached to Unity’s game objects. The simplicity of the game’s scope helped keep the scripts independent and easy to manage. The main complexity of this project was learning how to put it all together in Unity.",
      "logic-2": "Given the learning objective of this project there was no further efforts to organize or condense the project’s files. This is how the assets structure ended up looking like.",
      "logic-3": "Here is a simple snippet from the AsteroidScript.cs with the Update function that Unity runs on every frame. It controls a set of asteroid’s horizontal movement and its destruction when reaching the off-screen threshold (deadZone).",
      "design": "Visual Design System",
      "design-1": "The goal with the visuals of Flappy Astronaut was to define a theme that could align all elements of the game to a single style. The theme of Futuristic Outer-Space was the perfect solution for the flying mechanics, obstacles, and new oxygen survival mechanics.",
      "design-2": "All project sprites were created using Aseprite, and were inspired or mixed with freely available assets from <a class='link' href='https://assetstore.unity.com/' target='_blank'>Unity's Asset Store</a>.",
      "demo": "Demo & Download",
      "demo-1": "Download Flappy Astronaut on GitHub and give it a try!",
      "demo-btn": "Download Demo",
      "learnings": "Learnings",
      "learnings-1": "This project was the perfect starting point to uncover the potential paths ahead for game development. It showed the possibilities of an engine like Unity, and highlighted the complexities involved in planning, building, and delivering a game experience.",
      "learnings-2": "Here are the most significant learnings and insights from this project:",
      "learnings-li-1": "<span class='text-highlight'>Game development is hard.</span><p>I knew this before starting, but it’s only with practice that we really understand the implication of those words. A quick demo game can be easy to put together, but delivering a properly polished experience can be extremely complex and takes time.</p>",
      "learnings-li-2": "<span class='text-highlight'>Unity Engine is really flexible.</span><p>My biggest surprise was on how easy-to-use and versatile this engine is. I could easily convert the application into an HTML element or a mobile app for both iOS and Android if the project were to evolve in that direction.</p>",
      "learnings-li-3": "<span class='text-highlight'>Visual identity goes a long way.</span><p>Giving the project a design theme really helped to add quality to the end result without much further complexity. The next steps would have been to add better animations and variety to the stage and player interactions.</p>",
      "learnings-li-4": "<span class='text-highlight'>Depth and variety of mechanics.</span><p>Flappy Astronaut had clear boundaries with simple game mechanics and objectives. However, if this project were to evolve beyond just a prototype demo, it would need a variety of additional player challenges, a clearer and more rewarding end-goal, better feedback animations, more stage variations, and difficulty customizations.</p>",
      "learnings-li-5": "<span class='text-highlight'>Coding fundamentals.</span><p>C# provided a great opportunity to revisit and build better coding foundations. Being a Object-Oriented Programming (OOP) language, it provided a good refresher on the principles of modularity, abstraction, and clean code.</p>",
      "closing": "Thank you for checking out this project!"
    },
    "bs": {
      "images": {
        "concepts": "images/projects/born_survivor/PZLabs_Portfolio_BornSurvivor_3_CoreConcepts.png",
        "logic": "images/projects/born_survivor/PZLabs_Portfolio_BornSurvivor_4_GameLogic.png",
        "design": "images/projects/born_survivor/PZLabs_Portfolio_BornSurvivor_5_DesignSystem.png"
      },
      "category": "<span class='text-highlight'>Category:<br></span>Demo Unity Game",
      "stack": "<span class='text-highlight'>Tech Stack:<br></span>C#, Unity",
      "inspiration": "<span class='text-highlight'>Inspiration:<br></span>Vampire Survivors",
      "index": "Index:",
      "objective": "Objective",
      "objective-1": "Born Survivor was a quick experiment with the objective of learning the complexities involved in developing interesting game mechanics. In this case we implemented a “Pick 1 of 3” rogue-like style mechanic to uncover the complexities and potential for future usage in other projects. The end goal was not to release a fully developed game, but just an experience that accomplished this objective.",
      "objective-2": "A “Pick 1 of 3” rogue-like mechanic is a recent trend popularized by the game Vampire Survivors. It presents the user with the opportunity to choose one in three choices that get randomly selected from a long list of power-ups. The randomized nature creates an almost infinite level of variety to each gameplay session and gives additional longevity to the whole experience.",
      "concepts": "Core Concepts",
      "concepts-1": "Born Survivor is a game where the player needs to survive for as long as possible while increasingly difficult waves of enemies are spawned every few seconds.",
      "concepts-2": "The player moves around a pre-defined map, killing each enemy by striking them with an attack and staying away from their reach.",
      "concepts-3": "Experience gems are dropped on the ground from defeated enemies and can be collected by the player, granting a level whenever enough experience gems have been collected.",
      "concepts-4": "Each level gained stops the game to give the player the ability to pick 1 of 3 different power-up options. These options include a variety of improvements to the player’s abilities, such as increased damage for attacks, running speed, and life.",
      "concepts-5": "By combining different power options this specific mechanic provides a vast range of combinations, keeping the experience fresh and exciting for a longer time.",
      "tech": "Tech Stack",
      "tech-1": "After learning the basics with the <a class='link' href='/flappy_astronaut.html' target='_blank'>first game</a>, Unity provided the quickest way to develop the mechanics proposed by this project. It was a great opportunity to test some of the limitations with the amount of enemies instantiated at the same time.",
      "tech-2": "The primary programming language used in Unity. This time with the focus to learn more complex scripting game logic.",
      "logic": "Game Logic",
      "logic-1": "The logic diagram is a summarized representation of the controlling scripts attached to Unity’s game objects. As a simple experiement, this project’s focus was mainly on the correct implementation of the power-up controller and it’s relation to other scripts. The main complexity was around creating a player controller that is influenced by the power-ups choosen by the user.",
      "logic-2": "While our first project kept a lean file structure, this time the “Pick 1 of 3” design and Unity’s game object structure forced the creation of a separate script files for each PowerUp.",
      "logic-3": "Here is a brief snippet from PowerUp_DamagePercent.cs to showcase how the player data was manipulated.",
      "logic-4": "This next script is from PowerUpPool.cs. This logic randomly chooses three power ups from the available list and generates the game objects as options for the user to choose from with the GeneratePowerUpOptions function.",
      "design": "Visual Design System",
      "design-1": "Born Survivor did not have any specific visual design system requirements. Since the objective focused on the power-up system, all visual design decisions and art assets were gathered from freely available sources including the Unity’s Asset Store.",
      "demo": "Demo & Download",
      "demo-1": "Download Born Survivor on GitHub and give it a try!",
      "demo-btn": "Download Demo",
      "learnings": "Learnings",
      "learnings-1": "This project had a much narrower focus than our first venture into game dev with Flappy Astronaut. While our first foray was aimed at understanding the complexities of the whole process, this time we wanted to zoom in on the specific complexities involved in developing interesting game mechanics.",
      "learnings-2": "Here are the most significant learnings and insights from this project:",
      "learnings-li-1": "<span class='text-highlight'>Interesting game mechanics take time polish.</span><p>Creating a simple game mechanic can be quick and easy to implement, however, getting it to a point that is engaging and truly rewarding takes time and polish. With Born Survival we included several game mechanics to highlight the main focus with the powerups, but getting other fundamental pillars like combat, enemy behaviour, and variety would have taken a much longer time to refine and reach an acceptable quality level for an end product.</p>",
      "learnings-li-2": "<span class='text-highlight'>“Pick 1 of 3” is a great way to add replayability.</span><p>Our main objective proved the hypothesis that even a very simple implementation of a “Pick 1 of 3” mechanic can have notable impacts on user experience. The promise of variety creates a sense of possibilities and drives experimentation and increased engagement by the end user. In Born Survivor this potential was kept purposefuly limited, but with the proper investment on a complete experience this mechanic could have impressive positive results.</p>",
      "learnings-li-3": "<span class='text-highlight'>Unity’s limitations.</span><p>Unity runs an Update function on every frame for each game object that has a script attached to it. This means that the number of elements on screen that has a script can have a significant impact on performance if not handled correctly. Instead of instantiating and destroying scripted game objects (like enemies), the best practice would have been to Pool these objects and reuse them as needed instead of fully destroying them after use.</p>",
      "learnings-li-4": "<span class='text-highlight'>Coding fundamentals.</span><p>As we dove into more complex mechanics, it became instantly obvious that keeping our code modular and organized is critical to properly maintain and keep improving on other similar project in the future. Frequent code revision and refactoring is a critical task that can’t be overlooked and absolutely needs to be accounted for in our projects’ scope.</p>",
      "closing": "Thank you for checking out this project!"
    },
    "trofy": {
      "images": {
        "concepts": "images/projects/trofy/Trofy_3_CoreConcepts_PZLabs_Portfolio.png",
        "gamification": "images/projects/trofy/Trofy_3_1_Gamification_PZLabs_Portfolio.png",
        "user": "images/projects/trofy/Trofy_4_GameLogic_PZLabs_Portfolio.png",
        "logic": "images/projects/trofy/Trofy_5_Logic_PZLabs_Portfolio.png",
        "notifications": "images/projects/trofy/Trofy_6_NotificationSystem_PZLabs_Portfolio.png",
        "design": "images/projects/trofy/Trofy_7_Design_PZLabs_Portfolio.png",
        "wireframe": "images/projects/trofy/Trofy_8_Ideation_PZLabs_Portfolio.png",
        "roadmap": "images/projects/trofy/Trofy_9_MVPRoadmap_PZLabs_Portfolio.png"
      },
      "category": "<span class='text-highlight'>Category:<br></span>Productivity Mobile App",
      "stack": "<span class='text-highlight'>Tech Stack:<br></span>C#, Unity, iOS and Android",
      "inspiration": "<span class='text-highlight'>Inspiration:<br></span>Duolingo",
      "index": "Index:",
      "objective": "Objective",
      "objective-1": "Trofy is a mobile app with the objective to help you achieve your goals by gamifying personal objectives to reinforce the creation of good habits. The name refers to the act of receiving a trophy given to yourself by yourself.",
      "objective-2": "After years of struggling with procrastination in my youth, it slowly became clear that the best way to motivate myself and maintain new habits was to document and review my progress over time. Seeing historical trends of even slightly improvements motivated me to keep going. My goal with Trofy was to transform that metodology into a game that would inspire others to approach consistant personal improvement in the same way.",
      "objective-3": "The app’s idea was inspired by Duolingo’s gamified education methodology, where users have clear progression goals, get points to spend on extra lives, and can easily opt-in to compete with other users in in-app ladders with multiple levels of difficulty ranks.",
      "concepts": "Core Concepts",
      "concepts-1": "The app’s structure is divided in a few core pillars:",
      "concepts-2": "Gamified experience",
      "concepts-3": "While Trofy is a “to-do like” app in it’s core, it’s main aspect is to resemble a game. Users should feel like playing a game by receiving in-app rewards and clear visual feedback.",
      "concepts-4": "The gamification system was designed to motivate users with two positive feedback loops on Challenge completion. One by receiving a Trophy on challenge completion, and the other with a Challenge level-up system.",
      "concepts-5": "A challenge in Trofy is defined by an activity that must be completed at least once a week. This means that a user can earn a Trophy every week, and a level on that challenge every month.",
      "concepts-6": "Trofy’s MVP focused on building the core gamified experience, including the user interface and visual feedback. Community features like competitions, objective sharing, and account systems were kept out of scope as they would require significant backend development beyond the project’s allocated timeframe. However, these features would be essential to make the app truly gamified and ready for a full v1.0 release.",
      "concepts-7": "Personal improvement goal setting",
      "concepts-8": "The main drive for using the app is to be able to quickly create, update, and review important personal objectives.",
      "concepts-9": "A challenge in Trofy is defined by a task that must be completed at least once a week. When creating a challenge, a user has the ability to customize two main properties:",
      "concepts-10": "<span class='text-highlight'>Frequency (Difficulty):</span><p class='indent'>Defines the number of days in a week that the task needs to be completed. A challenge can be a single weekly task, or something that needs to be completed everyday.</p>",
      "concepts-11": "<span class='text-highlight'>Weekly Start Date (Start):</span><p class='indent'>Defines when the challenge starts and the day of the week that it restarts. If you define an objective to start on a Wednesday, it means the weekly challenge always starts on Wednesdays and ends on Tuesdays at the end of the day.</p>",
      "concepts-12": "Progress tracking & performance review",
      "concepts-13": "Each objective clearly displays their progress so the user can have a general idea of how they are doing in a quick glance. Since each objective can have a different amount of days required to be completed in a week, each objective will have their own percentage progression for that week and history since it was created.",
      "concepts-14": "The user can also leave a short written note and rate from 1 to 5 stars each day of the week. This very simple feature can give the user some additional context when reviewing their progress at a later date.",
      "concepts-15": "The progress tab is where it all comes together to quickly show how much the user has improved since they started using the app. Being able to review overall progression in a quick glance should be the main motivating factor to bring users back to the app and to continue focusing on their personal priorities.",
      "user": "User Story Map",
      "user-1": "Trofy’s goal of encouraging good habits guided the structure of the user journey. The experience was designed as a positive feedback loop — motivating users to go beyond their goals and return regularly to continue improving.",
      "user-2": "At its core, the app functions like a to-do list, similar to the ones you may have used or created yourself. The biggest difference is the opportunity to fully track past progress, check trends, and provide opportunities for the user to reflect and reprioritize their objectives.",
      "tech": "Tech Stack",
      "tech-1": "Developing a few demo games previously in Unity provided a solid foundation for a gamified app. Unity provided a solid way to develop logic behind constantly animated objects and a seamless solution to port the application to iOS and Android mobile devices.",
      "tech-2": "Csharp is the programming language used in Unity. After learning the foundations of the language, it was refreshing to implement more challenging logic with the notifications controller, save and load systems, and day list managers.",
      "tech-3": "This was also my first time working with AI tools to improve on the code I was writing and to help with more complex logic that was beyond my realm of knowledge. I wrote more details on my use of these tools on the <a class='link' href='#ai'>learnings section</a> and on our <a class='link' href='/about.html'>about page</a>.",
      "logic": "Information Architecture",
      "logic-1": "The core component of  Trofy’s logic system is focused on the Day List objects, it is used and referenced by all main components of the app.",
      "logic-2": "Every objective generates a list of days in a week’s period. This list is then updated by the User Controller through user input, and then accessed by the Date Controller to display today’s applicable objectives and any history of completion on the progress tab.",
      "logic-3": "This is the code that controls the initial generation of a week’s day list from the Objective Controller. Once the initial generated week is completed, the code automatically triggers the generation of additional weeks for the next objective periods.",
      "logic-4": "Another notable area from Trofy’s design is the logic behind the notifications sent by the app. Push notifications are one of the biggest benefits of working with mobile devices. In order to have an engaging and effective experience, it would be crucial to implement a system that provided periodic reminders to the user and motivational messages to bring them back after periods of inactivity.",
      "logic-5": "Trofy’s notifications system was structured with three types of notification schedules:",
      "logic-6": "<span class='text-highlight'>Priority notifications</span><p class='indent'>Reminders on how many days left in a objective that still isn’t complete this week — “This is your last chance to get a 🏆 this week!”.</p>",
      "logic-7": "<span class='text-highlight'>Restart notifications</span><p class='indent'>Reminders on new week starts — “Exercise starts again today, start strong 💪”.</p>",
      "logic-8": "<span class='text-highlight'>Callback notifications</span><p class='indent'>Motivational reminders to bring back the user to the app after many days of inactivity — “Your struggles make you stronger. Your obstacles pave the way for success 💯”.</p>",
      "logic-9": "Another feature worth a highligh was the localization system built for the language switcher. With a simple tap, users can change the app’s language instantly.",
      "logic-10": "The localization system works by replacing text strings based on spreadsheet-style tables that map each interface element to its translation.",
      "design": "Visual Design System",
      "design-1": "The goal with the visuals of Trofy was to make the whole experience feel like the user is playing a game. A “To-do” list is something you go back to checkmark what has been done, in Trofy you return to earn rewards on a game for completing those tasks. All elements used were purposefully choosen to resemble mobile games like Clash of Clans and designs from gamified apps like Duolingo.",
      "design-2": "Trofy’s main character was custom designed and created with Photoshop, while the rest of the UI elements were paid assets acquired from <a class='link' href='https://assetstore.unity.com/packages/2d/gui/gui-pro-casual-game-176695' target='_blank'>Unity’s Asset Store</a>.",
      "wireframe": "Wireframe",
      "wireframe-1": "This is a simple wireframe that helped kick-start the project. The end result is far different than this example, but this process helped organize the information structure required for a better user experience.",
      "roadmap": "MVP Roadmap Structure",
      "roadmap-1": "While this project was built as a test experiement on gamified experiences, the project’s roadmap was structured the same was as if this was a client’s project. The initial v0.1 MVP for Trofy was released for testing in six weeks, but the project stayed in development for a couple more months receiving updates up to v0.4 with the additions of the notification controller and fixes to issues found from user testing.",
      "demo": "Demo & Download",
      "demo-1": "The app is available only on Android devices through an .apk file.",
      "demo-2": "Unfortunately we couldn’t keep the app running on both the iOS and Android stores, as both platforms required frequent updates to keep test apps available.",
      "demo-btn": "Download .APK File",
      "learnings": "Learnings",
      "learnings-1": "This project was the perfect first experiement on gamified applications. It covered all steps from ideation to release of an MVP test version for user testing on both iOS and Android devices. It also highlighted the possibilities of gamified applications through an engine like Unity, and further clarified the effort that would be needed to take this project all the way to a v1.0 release.",
      "learnings-2": "Here are the most significant learnings and insights from this project:",
      "learnings-li-1": "<span class='text-highlight'>Gamified experience potential.</span><p>The experience crafted with the visuals and features of Trofy were a great first step to create a fully gamified experience, but it wasn’t enough. To fully achieve that goal we would need to add support for user-driven competitions and community features for competing and sharing in-app objectives. This would require a significant time investment in structuring backend server structure that would go beyond the initial timeframe allocated for this project.</p>",
      "learnings-li-2": "<span class='text-highlight'>Bridging the gap for a full release.</span><p>This project had a limited scope to ensure we delivered a working MVP that could properly communicate the value proposition envisioned with Trofy. Creating a sense of community with in-app competitions and leaderboards would be the next major pillar of focus before a full app release.</p>",
      "learnings-li-3": "<span class='text-highlight'>Remote backend server support.</span><p>Trofy was developed to run fully locally and had no online functionality, which meant that our backend support was limited to the device’s local storage to function. Proper backend setup with a Node.js server for user authentication, user data storage, and future community features would be the required next steps for a potential full release.</p>",
      "learnings-li-4": "<span class='text-highlight'>Mobile apps with Unity Engine.</span><p>Unity provides one of the best solutions to easily port an application as a native mobile app with iOS Xcode and Android Gradle projects. The process is so smooth that there’s very little code customization required to get the same application from one platform to the other. The only major difference we had to customize in Trofy was the notification system for different trigger structures in each platform.</p>",
      "learnings-li-5": "<span class='text-highlight'>Coding with AI</span><p>This was the first time I started to use Artificial Intelligence tools for my code and it was quite an eye-opening experience. While these tools were great for quickly building more complex code, it quickly became a detriment to how I was able to retain information and re-apply it again in other similar situations. Since then I’ve scaled back the usage of the tool so it is purely educational and for situations that I’m truly stuck for longer periods of time. There’s a full statement on my usage of AI on our <a class='link' href='/about.html#ai'>about page.</a></p>",
      "closing": "Thank you for checking out this project!"
    }
  }
}